<?php

include_once('incourage_events.features.inc');

/**
 * Implements hook_block().
 */
function incourage_events_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      return array(
        'create_block' => array(
          'info' => 'Create content links',
        ),
      );
    case 'view':
      if ($delta == 'create_block') {
        return array(
          'subject' => t('Promote events'),
          'content' => '<ul><li><a href="/node/add/location">Add a location</a></li><li><a href="/node/add/event">Submit an event</a></li></ul>',
        );
      }
  }
}

/**
 * Implementation of hook_voipscript_load_script().
 */
function incourage_events_voipscript_load_script($script_name, $params = NULL) {
  if ($script_name == 'incourage_event') {
    module_load_include('inc', 'incourage_events', 'incourage_events.script');
    $node = node_load($params['nid']);
    return _incourage_events_event_script($node);
  }
}

/**
 * Implementation of hook_voipscript_get_script_names().
 */
function incourage_events_voipscript_get_script_names() {
  return array(
    'incourage_event',
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function incourage_events_form_event_node_form_alter(&$form, &$form_state) {
  if (empty($form['nid']['#value'])) {
    $form['introduction-help']['#value'] = t('Enter your event here. If the location does not exist in the system yet <a href="@url">you can create a new location first</a>.', array('@url' => url('node/add/location')));
    $form['introduction-help']['#weight'] = -20;
  }
  $form['body_field']['body']['#rows'] = 5;
  $form['body_field']['body']['#description'] = t('Provide a brief description of your event, including special instructions, if any. If it reoccurs, mention something like "Repeats every Wednesday and Thursday evening');
}

/**
 * Helper function return event extension sms msg.
 */
function incourage_events_sms_reply($extension) {
  $msg = '';
  $node = node_load($extension['module_id']);
  $msg = incourage_events_format_sms($node); 

  return $msg;
}

/**
 * Format SMS text for an event.
 */
function incourage_events_format_sms($node) {
  if (! empty($node->sms_text[0]['value'])) {
    $msg = $node->field_sms_text[0]['value'];
  }
  else {
    list($location, $phone) = _incourage_events_location($node);
    $msg .= $node->field_cost[0]['value'];
    $msg = "[title-raw]. [field_cost-raw]. [field_date-next-type:sms]. $location Event ext. " . $node->voipextension_number;
    $msg = token_replace_multiple($msg, array('global' => NULL, 'node' => $node));
    $msg = strip_tags($msg);
  }

  return $msg;
}

/**
 * Helper function to return correct location information.
 */
function _incourage_events_location($node) {
  if (!empty($node->field_location_reference[0]['nid'])) {
    $location_node = node_load($node->field_location_reference[0]['nid']);
    $location = $location_node->title . ', ' . $location_node->field_address_street[0]['value'] . ', ' . $location_node->field_address_city[0]['value'] . '. ';
    $phone = $location_node->field_phone_text[0]['value'];
  }
  else {
    $location = $node->field_location[0]['value'];
    $phone = '';
  }
 
  return array($location, $phone);
}

/**
 * Nasty short cut for notifications text. We create
 * a custom token to inclued all the logic we require
 * for selecting what is in the SMS. token_logic would
 * be the alternative if it was still about. Downside
 * here is it is difficult for a site admin to change the
 * text; but as it's custom anyway.
 */

/**
 * Implements hook_token_list().
 */
function incourage_events_token_list($type = 'all') {
  $tokens = array();

  if ($type == 'node' || $type == 'all') {
    $tokens['node']['incourage-events-sms'] = t("Custom event SMS content.");
  }

  return $tokens;
}

/**
 * Implements hook_token_values().
 */
function incourage_events_token_values($type, $object = NULL, $options = array()) {
  $values = array();

  if ($type == 'node' && !empty($object) && $object->type == 'event') {
    $values['incourage-events-sms'] = incourage_events_format_sms($object);
  }

  return $values;
}
